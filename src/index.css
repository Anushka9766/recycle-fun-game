@tailwind base;
@tailwind components;
@tailwind utilities;

/* Definition of the design system. All colors, gradients, fonts, etc should be defined here. 
All colors MUST be HSL.
*/

@layer base {
  :root {
    --background: 200 100% 95%;
    --foreground: 220 20% 20%;

    --card: 0 0% 100%;
    --card-foreground: 220 20% 20%;

    --popover: 0 0% 100%;
    --popover-foreground: 220 20% 20%;

    --primary: 260 80% 55%;
    --primary-foreground: 0 0% 100%;

    --secondary: 45 95% 60%;
    --secondary-foreground: 220 20% 20%;

    --muted: 200 40% 85%;
    --muted-foreground: 220 15% 45%;

    --accent: 340 90% 60%;
    --accent-foreground: 0 0% 100%;

    --destructive: 0 75% 60%;
    --destructive-foreground: 0 0% 100%;

    --border: 200 30% 80%;
    --input: 200 30% 90%;
    --ring: 260 80% 55%;

    --radius: 1rem;

    /* Bin colors */
    --bin-wet: 120 65% 45%;
    --bin-dry: 210 75% 55%;
    --bin-hazard: 0 75% 60%;
    --bin-recycle: 45 95% 55%;

    /* Game colors */
    --success: 140 70% 50%;
    --warning: 30 90% 55%;
    --game-bg-start: 195 100% 90%;
    --game-bg-end: 120 60% 85%;

    /* Animation colors */
    --sparkle: 50 100% 70%;
    --glow: 260 90% 75%;

    --sidebar-background: 0 0% 98%;
    --sidebar-foreground: 240 5.3% 26.1%;
    --sidebar-primary: 240 5.9% 10%;
    --sidebar-primary-foreground: 0 0% 98%;
    --sidebar-accent: 240 4.8% 95.9%;
    --sidebar-accent-foreground: 240 5.9% 10%;
    --sidebar-border: 220 13% 91%;
    --sidebar-ring: 217.2 91.2% 59.8%;
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground font-sans;
  }
}

@layer utilities {
  .game-bg {
    background: linear-gradient(180deg, hsl(var(--game-bg-start)), hsl(var(--game-bg-end)));
  }

  .bin-wet {
    background: hsl(var(--bin-wet));
  }

  .bin-dry {
    background: hsl(var(--bin-dry));
  }

  .bin-hazard {
    background: hsl(var(--bin-hazard));
  }

  .bin-recycle {
    background: hsl(var(--bin-recycle));
  }

  @keyframes bounce-in {
    0% {
      transform: scale(0) rotate(-180deg);
      opacity: 0;
    }
    50% {
      transform: scale(1.2) rotate(10deg);
    }
    100% {
      transform: scale(1) rotate(0deg);
      opacity: 1;
    }
  }

  @keyframes wiggle {
    0%, 100% {
      transform: rotate(0deg);
    }
    25% {
      transform: rotate(-10deg);
    }
    75% {
      transform: rotate(10deg);
    }
  }

  @keyframes sparkle {
    0%, 100% {
      opacity: 0;
      transform: scale(0);
    }
    50% {
      opacity: 1;
      transform: scale(1);
    }
  }

  @keyframes glow-pulse {
    0%, 100% {
      box-shadow: 0 0 20px hsl(var(--glow) / 0.3);
    }
    50% {
      box-shadow: 0 0 40px hsl(var(--glow) / 0.6);
    }
  }

  .animate-bounce-in {
    animation: bounce-in 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55);
  }

  .animate-wiggle {
    animation: wiggle 0.5s ease-in-out;
  }

  .animate-sparkle {
    animation: sparkle 0.6s ease-in-out;
  }

  .animate-glow-pulse {
    animation: glow-pulse 1s ease-in-out infinite;
  }

  .draggable-item {
    cursor: grab;
    transition: transform 0.2s, box-shadow 0.2s;
  }

  .draggable-item:active {
    cursor: grabbing;
    transform: scale(1.1);
  }

  .drop-zone-hover {
    transform: scale(1.05);
    box-shadow: 0 8px 30px rgba(0, 0, 0, 0.15);
  }
}
